{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/SpeechAI_Server-main/frontend/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Begär åtkomst till mikrofonen och sätt upp MediaRecorder när komponenten laddas\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n    }\n  };\n  const handleUpload = async audioChunks => {\n    const audioBlob = new Blob(audioChunks, {\n      type: 'audio/webm'\n    });\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recorded_audio.webm');\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:3000/api/process-audio', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Serverfel vid bearbetning av ljudet.');\n      }\n      const audioBlobResponse = await response.blob();\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  mediaRecorder === null || mediaRecorder === void 0 ? void 0 : mediaRecorder.addEventListener('dataavailable', event => {\n    const audioChunks = [];\n    audioChunks.push(event.data);\n    if (mediaRecorder.state === 'inactive') {\n      handleUpload(audioChunks);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spela in och ladda upp ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: loading,\n      children: \"Starta inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: loading,\n      children: \"Stoppa inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bearbetar ljud...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: responseAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"Sh/i8mvzUWj3ygLSuaSEEi0Q3PU=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AudioUploader","_s","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","error","console","handleStartRecording","start","handleStopRecording","stop","handleUpload","audioChunks","audioBlob","Blob","type","formData","FormData","append","response","fetch","method","body","ok","Error","audioBlobResponse","blob","audioURL","URL","createObjectURL","addEventListener","event","push","data","state","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","controls","src","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/SpeechAI_Server-main/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst AudioUploader = () => {\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Begär åtkomst till mikrofonen och sätt upp MediaRecorder när komponenten laddas\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const recorder = new MediaRecorder(stream);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    mediaRecorder.start();\n    setIsRecording(true);\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n    }\n  };\n\n  const handleUpload = async (audioChunks) => {\n    const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recorded_audio.webm');\n\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:3000/api/process-audio', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error('Serverfel vid bearbetning av ljudet.');\n      }\n\n      const audioBlobResponse = await response.blob();\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  mediaRecorder?.addEventListener('dataavailable', (event) => {\n    const audioChunks = [];\n    audioChunks.push(event.data);\n\n    if (mediaRecorder.state === 'inactive') {\n      handleUpload(audioChunks);\n    }\n  });\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h2>Spela in och ladda upp ljud</h2>\n\n      {!isRecording ? (\n        <button onClick={handleStartRecording} disabled={loading}>\n          Starta inspelning\n        </button>\n      ) : (\n        <button onClick={handleStopRecording} disabled={loading}>\n          Stoppa inspelning\n        </button>\n      )}\n\n      {loading && <p>Bearbetar ljud...</p>}\n\n      {responseAudio && (\n        <div>\n          <h3>Bearbetat ljud</h3>\n          <audio controls src={responseAudio}></audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}