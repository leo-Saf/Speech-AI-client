{"ast":null,"code":"// client.js\nexport const uploadAudio = async (audioBlob, language) => {\n  const formData = new FormData();\n  formData.append('audio', audioBlob);\n  formData.append('language', language); // L채gg till spr책kvalet\n\n  const response = await fetch('http://localhost:3000/api/process-audio', {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Fel vid uppladdning');\n  }\n  return await response.blob(); // Returnera ljudfilen\n};","map":{"version":3,"names":["uploadAudio","audioBlob","language","formData","FormData","append","response","fetch","method","body","ok","Error","blob"],"sources":["/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/client.js"],"sourcesContent":["// client.js\nexport const uploadAudio = async (audioBlob, language) => {\n  const formData = new FormData();\n  formData.append('audio', audioBlob);\n  formData.append('language', language); // L채gg till spr책kvalet\n\n  const response = await fetch('http://localhost:3000/api/process-audio', {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Fel vid uppladdning');\n  }\n\n  return await response.blob(); // Returnera ljudfilen\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,KAAK;EACxD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,SAAS,CAAC;EACnCE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC,CAAC,CAAC;;EAEvC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACtEC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}