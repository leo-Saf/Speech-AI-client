{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Downloads/SpeechAI_Server-main/frontend/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioResponse, setAudioResponse] = useState(null);\n  const handleFileChange = event => {\n    setAudioFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('audio', audioFile);\n    try {\n      const response = await fetch('http://localhost:3000/api/process-audio', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.ok) {\n        const audioBlob = await response.blob();\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioResponse(audioUrl); // Spara ljudets URL för att spela upp\n      } else {\n        console.error('Fel vid uppladdning:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Nätverksfel:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ladda upp en ljudfil\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"audio/*\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Skicka\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), audioResponse && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Svar fr\\xE5n servern:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioResponse,\n          type: \"audio/mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), \"Ditt ljudformat st\\xF6ds inte.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"L/R2QJfDF7sM0kQurVlYdtpRGFM=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AudioUploader","_s","audioFile","setAudioFile","audioResponse","setAudioResponse","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","fetch","method","body","ok","audioBlob","blob","audioUrl","URL","createObjectURL","console","error","statusText","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","required","controls","src","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Downloads/SpeechAI_Server-main/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst AudioUploader = () => {\n  const [audioFile, setAudioFile] = useState(null);\n  const [audioResponse, setAudioResponse] = useState(null);\n  \n  const handleFileChange = (event) => {\n    setAudioFile(event.target.files[0]);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const formData = new FormData();\n    formData.append('audio', audioFile);\n\n    try {\n      const response = await fetch('http://localhost:3000/api/process-audio', {\n        method: 'POST',\n        body: formData,\n      });\n\n      if (response.ok) {\n        const audioBlob = await response.blob();\n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudioResponse(audioUrl); // Spara ljudets URL för att spela upp\n      } else {\n        console.error('Fel vid uppladdning:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Nätverksfel:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Ladda upp en ljudfil</h2>\n      <form onSubmit={handleSubmit}>\n        <input type=\"file\" accept=\"audio/*\" onChange={handleFileChange} required />\n        <button type=\"submit\">Skicka</button>\n      </form>\n      {audioResponse && (\n        <div>\n          <h3>Svar från servern:</h3>\n          <audio controls>\n            <source src={audioResponse} type=\"audio/mp3\" />\n            Ditt ljudformat stöds inte.\n          </audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}