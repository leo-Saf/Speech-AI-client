{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/components/LanguageSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport LanguageCard from './LanguageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelector = () => {\n  _s();\n  const [languages, setLanguages] = useState([]);\n  useEffect(() => {\n    const fetchLanguages = async () => {\n      try {\n        const response = await fetch('https://restcountries.com/v3.1/all');\n        const data = await response.json();\n        const selectedLanguages = data.map(country => ({\n          name: country.name.common,\n          flag: country.flags.svg\n        })).filter(language => ['Sweden', 'Spain', 'United Kingdom'].includes(language.name));\n        setLanguages(selectedLanguages);\n      } catch (error) {\n        console.error('Error fetching languages:', error);\n      }\n    };\n    fetchLanguages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-card-container\",\n    children: languages.map(language => /*#__PURE__*/_jsxDEV(LanguageCard, {\n      language: language.name,\n      flag: language.flag,\n      onSelect: lang => console.log(`Selected language: ${lang}`) // Loggar valt språk\n    }, language.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(LanguageSelector, \"GUw6XtH2v7o+bYLHQuF10DihlfQ=\");\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","useEffect","useState","LanguageCard","jsxDEV","_jsxDEV","LanguageSelector","_s","languages","setLanguages","fetchLanguages","response","fetch","data","json","selectedLanguages","map","country","name","common","flag","flags","svg","filter","language","includes","error","console","className","children","onSelect","lang","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/components/LanguageSelector.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport LanguageCard from './LanguageCard';\n\nconst LanguageSelector = () => {\n    const [languages, setLanguages] = useState([]);\n\n    useEffect(() => {\n        const fetchLanguages = async () => {\n            try {\n                const response = await fetch('https://restcountries.com/v3.1/all');\n                const data = await response.json();\n                const selectedLanguages = data.map(country => ({\n                    name: country.name.common,\n                    flag: country.flags.svg,\n                })).filter(language => ['Sweden', 'Spain', 'United Kingdom'].includes(language.name));\n                \n                setLanguages(selectedLanguages);\n            } catch (error) {\n                console.error('Error fetching languages:', error);\n            }\n        };\n\n        fetchLanguages();\n    }, []);\n\n    return (\n        <div className=\"language-card-container\">\n            {languages.map((language) => (\n                <LanguageCard\n                    key={language.name}\n                    language={language.name}\n                    flag={language.flag}\n                    onSelect={(lang) => console.log(`Selected language: ${lang}`)} // Loggar valt språk\n                />\n            ))}\n        </div>\n    );\n};\n\nexport default LanguageSelector;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMS,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;QAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,MAAMC,iBAAiB,GAAGF,IAAI,CAACG,GAAG,CAACC,OAAO,KAAK;UAC3CC,IAAI,EAAED,OAAO,CAACC,IAAI,CAACC,MAAM;UACzBC,IAAI,EAAEH,OAAO,CAACI,KAAK,CAACC;QACxB,CAAC,CAAC,CAAC,CAACC,MAAM,CAACC,QAAQ,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAACC,QAAQ,CAACD,QAAQ,CAACN,IAAI,CAAC,CAAC;QAErFT,YAAY,CAACM,iBAAiB,CAAC;MACnC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDhB,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKuB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,EACnCrB,SAAS,CAACQ,GAAG,CAAEQ,QAAQ,iBACpBnB,OAAA,CAACF,YAAY;MAETqB,QAAQ,EAAEA,QAAQ,CAACN,IAAK;MACxBE,IAAI,EAAEI,QAAQ,CAACJ,IAAK;MACpBU,QAAQ,EAAGC,IAAI,IAAKJ,OAAO,CAACK,GAAG,CAAC,sBAAsBD,IAAI,EAAE,CAAE,CAAC;IAAA,GAH1DP,QAAQ,CAACN,IAAI;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIrB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAC7B,EAAA,CAlCID,gBAAgB;AAAA+B,EAAA,GAAhB/B,gBAAgB;AAoCtB,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}