{"ast":null,"code":"// src/client.js\n\nexport const uploadAudio = async audioBlob => {\n  const formData = new FormData();\n  formData.append('audio', audioBlob, 'recorded_audio.wav');\n  try {\n    const response = await fetch('http://localhost:3000/api/process-audio', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Fel vid uppladdning av ljudfil.');\n    }\n    return await response.blob();\n  } catch (error) {\n    console.error('Fel:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["uploadAudio","audioBlob","formData","FormData","append","response","fetch","method","body","ok","Error","blob","error","console"],"sources":["/Users/hasansafiah/Desktop/speech-AI-projekt/frontend/src/client.js"],"sourcesContent":["// src/client.js\n\nexport const uploadAudio = async (audioBlob) => {\n    const formData = new FormData();\n    formData.append('audio', audioBlob, 'recorded_audio.wav');\n  \n    try {\n      const response = await fetch('http://localhost:3000/api/process-audio', {\n        method: 'POST',\n        body: formData,\n      });\n  \n      if (!response.ok) {\n        throw new Error('Fel vid uppladdning av ljudfil.');\n      }\n  \n      return await response.blob();\n    } catch (error) {\n      console.error('Fel:', error);\n      throw error;\n    }\n  };\n  "],"mappings":"AAAA;;AAEA,OAAO,MAAMA,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC5C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,SAAS,EAAE,oBAAoB,CAAC;EAEzD,IAAI;IACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEN;IACR,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;IACpD;IAEA,OAAO,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;IAC5B,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}