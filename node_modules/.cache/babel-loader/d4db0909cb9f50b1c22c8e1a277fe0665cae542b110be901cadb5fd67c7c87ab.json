{"ast":null,"code":"// Funktion för att ladda upp ljud och språk\nexport const uploadAudio = async (blob, language) => {\n  const formData = new FormData();\n  formData.append('audio', blob, 'audio.webm'); // Lägg till ljudfilen i FormData\n  formData.append('language', language); // Lägg till det valda språket i FormData\n\n  const response = await fetch('http://localhost:3000/api/process-audio', {\n    method: 'POST',\n    body: formData\n  });\n  if (!response.ok) {\n    throw new Error('Fel vid uppladdning');\n  }\n  return await response.blob(); // Returnera bearbetat ljud som Blob från servern\n};\n\n// Funktion för att sätta språkval\nexport const setLanguage = async language => {\n  const response = await fetch('http://localhost:3000/api/set-language', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      language\n    })\n  });\n  if (!response.ok) {\n    throw new Error('Fel vid val av språk');\n  }\n  const data = await response.json();\n  return data.message; // Returnera bekräftelsemeddelande\n};","map":{"version":3,"names":["uploadAudio","blob","language","formData","FormData","append","response","fetch","method","body","ok","Error","setLanguage","headers","JSON","stringify","data","json","message"],"sources":["/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/client.js"],"sourcesContent":["// Funktion för att ladda upp ljud och språk\nexport const uploadAudio = async (blob, language) => {\n  const formData = new FormData();\n  formData.append('audio', blob, 'audio.webm'); // Lägg till ljudfilen i FormData\n  formData.append('language', language); // Lägg till det valda språket i FormData\n\n  const response = await fetch('http://localhost:3000/api/process-audio', {\n    method: 'POST',\n    body: formData,\n  });\n\n  if (!response.ok) {\n    throw new Error('Fel vid uppladdning');\n  }\n\n  return await response.blob(); // Returnera bearbetat ljud som Blob från servern\n};\n\n// Funktion för att sätta språkval\nexport const setLanguage = async (language) => {\n  const response = await fetch('http://localhost:3000/api/set-language', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ language }),\n  });\n\n  if (!response.ok) {\n    throw new Error('Fel vid val av språk');\n  }\n\n  const data = await response.json();\n  return data.message; // Returnera bekräftelsemeddelande\n};\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,MAAAA,CAAOC,IAAI,EAAEC,QAAQ,KAAK;EACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEJ,IAAI,EAAE,YAAY,CAAC,CAAC,CAAC;EAC9CE,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEH,QAAQ,CAAC,CAAC,CAAC;;EAEvC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;IACtEC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEN;EACR,CAAC,CAAC;EAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,qBAAqB,CAAC;EACxC;EAEA,OAAO,MAAML,QAAQ,CAACL,IAAI,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC;;AAED;AACA,OAAO,MAAMW,WAAW,GAAG,MAAOV,QAAQ,IAAK;EAC7C,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdK,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDJ,IAAI,EAAEK,IAAI,CAACC,SAAS,CAAC;MAAEb;IAAS,CAAC;EACnC,CAAC,CAAC;EAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACzC;EAEA,MAAMK,IAAI,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI,CAACE,OAAO,CAAC,CAAC;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}