{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { uploadAudio } from '../client'; // Importera din nya client.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('en-US'); // Standard språk är engelska\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const recorder = new MediaRecorder(stream, {\n          mimeType: 'audio/webm'\n        }); // Använder audio/webm format\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n    const audioChunks = [];\n    mediaRecorder.ondataavailable = event => {\n      audioChunks.push(event.data);\n    };\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunks, {\n        type: 'audio/webm'\n      }); // Spara ljudet som .webm\n      setAudioBlob(audioBlob);\n      setIsRecording(false);\n\n      // Automatisk uppladdning av ljudfil\n      await handleUpload(audioBlob);\n    };\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n    }\n  };\n  const handleUpload = async blob => {\n    if (!blob) {\n      alert('Vänligen spela in ett ljud först.');\n      return;\n    }\n    setLoading(true);\n    try {\n      const audioBlobResponse = await uploadAudio(blob, selectedLanguage); // Skicka med valt språk\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spela in ett ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"V\\xE4lj spr\\xE5k f\\xF6r svar:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedLanguage,\n        onChange: e => setSelectedLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"en-US\",\n          children: \"Engelska\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sv-SE\",\n          children: \"Svenska\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: loading,\n      children: \"Starta inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: loading,\n      children: \"Stoppa inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bearbetar ljud...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: responseAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"vRLjtUEkBAa7d7VIJOe8UsJgU2U=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","uploadAudio","jsxDEV","_jsxDEV","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","selectedLanguage","setSelectedLanguage","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","recorder","MediaRecorder","mimeType","error","console","handleStartRecording","start","audioChunks","ondataavailable","event","push","data","onstop","Blob","type","handleUpload","handleStopRecording","stop","blob","alert","audioBlobResponse","audioURL","URL","createObjectURL","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","disabled","controls","src","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/speech-AI-projekt test/frontend/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { uploadAudio } from '../client'; // Importera din nya client.js\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [selectedLanguage, setSelectedLanguage] = useState('en-US'); // Standard språk är engelska\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const recorder = new MediaRecorder(stream, { mimeType: 'audio/webm' }); // Använder audio/webm format\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    mediaRecorder.start();\n    setIsRecording(true);\n\n    const audioChunks = [];\n    mediaRecorder.ondataavailable = (event) => {\n      audioChunks.push(event.data);\n    };\n\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunks, { type: 'audio/webm' }); // Spara ljudet som .webm\n      setAudioBlob(audioBlob);\n      setIsRecording(false);\n\n      // Automatisk uppladdning av ljudfil\n      await handleUpload(audioBlob);\n    };\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && isRecording) {\n      mediaRecorder.stop();\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    if (!blob) {\n      alert('Vänligen spela in ett ljud först.');\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      const audioBlobResponse = await uploadAudio(blob, selectedLanguage); // Skicka med valt språk\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h2>Spela in ett ljud</h2>\n      \n      {/* Språkval */}\n      <label>\n        Välj språk för svar:\n        <select value={selectedLanguage} onChange={(e) => setSelectedLanguage(e.target.value)}>\n          <option value=\"en-US\">Engelska</option>\n          <option value=\"sv-SE\">Svenska</option>\n          {/* Lägg till fler språk efter behov */}\n        </select>\n      </label>\n\n      {!isRecording ? (\n        <button onClick={handleStartRecording} disabled={loading}>\n          Starta inspelning\n        </button>\n      ) : (\n        <button onClick={handleStopRecording} disabled={loading}>\n          Stoppa inspelning\n        </button>\n      )}\n\n      <br />\n      {loading && <p>Bearbetar ljud...</p>}\n\n      {responseAudio && (\n        <div>\n          <h3>Bearbetat ljud</h3>\n          <audio controls src={responseAudio}></audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlB,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEnEC,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACN,MAAM,EAAE;UAAEO,QAAQ,EAAE;QAAa,CAAC,CAAC,CAAC,CAAC;QACxEf,gBAAgB,CAACa,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IAEDT,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACnB,aAAa,EAAE;IAEpBA,aAAa,CAACoB,KAAK,CAAC,CAAC;IACrBrB,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMsB,WAAW,GAAG,EAAE;IACtBrB,aAAa,CAACsB,eAAe,GAAIC,KAAK,IAAK;MACzCF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IAC9B,CAAC;IAEDzB,aAAa,CAAC0B,MAAM,GAAG,YAAY;MACjC,MAAM9B,SAAS,GAAG,IAAI+B,IAAI,CAACN,WAAW,EAAE;QAAEO,IAAI,EAAE;MAAa,CAAC,CAAC,CAAC,CAAC;MACjE/B,YAAY,CAACD,SAAS,CAAC;MACvBG,cAAc,CAAC,KAAK,CAAC;;MAErB;MACA,MAAM8B,YAAY,CAACjC,SAAS,CAAC;IAC/B,CAAC;EACH,CAAC;EAED,MAAMkC,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAI9B,aAAa,IAAIF,WAAW,EAAE;MAChCE,aAAa,CAAC+B,IAAI,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMF,YAAY,GAAG,MAAOG,IAAI,IAAK;IACnC,IAAI,CAACA,IAAI,EAAE;MACTC,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACF;IAEA5B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM6B,iBAAiB,GAAG,MAAM3C,WAAW,CAACyC,IAAI,EAAE1B,gBAAgB,CAAC,CAAC,CAAC;MACrE,MAAM6B,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,iBAAiB,CAAC;MACvD/B,gBAAgB,CAACgC,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOlB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRZ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK6C,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClC/C,OAAA;MAAA+C,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG1BnD,OAAA;MAAA+C,QAAA,GAAO,+BAEL,eAAA/C,OAAA;QAAQoD,KAAK,EAAEvC,gBAAiB;QAACwC,QAAQ,EAAGC,CAAC,IAAKxC,mBAAmB,CAACwC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAAAL,QAAA,gBACpF/C,OAAA;UAAQoD,KAAK,EAAC,OAAO;UAAAL,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACvCnD,OAAA;UAAQoD,KAAK,EAAC,OAAO;UAAAL,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEhC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EAEP,CAAC9C,WAAW,gBACXL,OAAA;MAAQwD,OAAO,EAAE9B,oBAAqB;MAAC+B,QAAQ,EAAE9C,OAAQ;MAAAoC,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETnD,OAAA;MAAQwD,OAAO,EAAEnB,mBAAoB;MAACoB,QAAQ,EAAE9C,OAAQ;MAAAoC,QAAA,EAAC;IAEzD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,eAEDnD,OAAA;MAAAgD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACLxC,OAAO,iBAAIX,OAAA;MAAA+C,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEnC1C,aAAa,iBACZT,OAAA;MAAA+C,QAAA,gBACE/C,OAAA;QAAA+C,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBnD,OAAA;QAAO0D,QAAQ;QAACC,GAAG,EAAElD;MAAc;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACjD,EAAA,CAvGID,aAAa;AAAA2D,EAAA,GAAb3D,aAAa;AAyGnB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}