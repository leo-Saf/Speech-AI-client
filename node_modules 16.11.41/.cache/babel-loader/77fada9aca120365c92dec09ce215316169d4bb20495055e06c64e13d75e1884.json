{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js\",\n  _s = $RefreshSig$();\n// src/components/HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database'; // Firebase Realtime Database\nimport { useNavigate } from 'react-router-dom'; // Importera useNavigate för navigering\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const navigate = useNavigate(); // Skapa en instans av navigate\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const db = getDatabase(); // Hämta referens till databasen\n      const conversationsRef = ref(db, 'conversations/'); // Referens till 'conversations' i databasen\n\n      try {\n        const snapshot = await get(conversationsRef); // Hämta data från Firebase\n        if (snapshot.exists()) {\n          const data = snapshot.val(); // Data från Firebase\n          console.log(\"Data från Firebase:\", data); // Logga datan för att se vad som hämtas\n\n          // Om data finns, konvertera det till en lista med alla konversationer\n          const conversationsList = Object.keys(data).map(key => ({\n            id: key,\n            ...data[key] // Lägg till all information från konversationen\n          }));\n          setConversations(conversationsList); // Sätt konversationerna i state\n        } else {\n          console.log(\"Inga konversationer tillgängliga.\");\n        }\n      } catch (error) {\n        console.log(\"Fel vid hämtning av konversationer:\", error);\n      }\n    };\n    fetchConversations();\n  }, []); // Endast körs när komponenten laddas\n\n  // Funktion för att navigera tillbaka till huvudsidan\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till huvudsidan\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.length > 0 ? conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: conversation.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: conversation.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Inga konversationer hittades.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoBack,\n      children: \"Tillbaka till Hemsidan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"kumPv95XaZzqxgpzG63BUVRiZ18=\", false, function () {\n  return [useNavigate];\n});\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","getDatabase","ref","get","useNavigate","jsxDEV","_jsxDEV","HistoryPage","_s","conversations","setConversations","navigate","fetchConversations","db","conversationsRef","snapshot","exists","data","val","console","log","conversationsList","Object","keys","map","key","id","error","handleGoBack","children","fileName","_jsxFileName","lineNumber","columnNumber","length","conversation","title","created_at","onClick","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js"],"sourcesContent":["// src/components/HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database'; // Firebase Realtime Database\nimport { useNavigate } from 'react-router-dom';  // Importera useNavigate för navigering\n\nconst HistoryPage = () => {\n  const [conversations, setConversations] = useState([]);\n  const navigate = useNavigate(); // Skapa en instans av navigate\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const db = getDatabase(); // Hämta referens till databasen\n      const conversationsRef = ref(db, 'conversations/'); // Referens till 'conversations' i databasen\n\n      try {\n        const snapshot = await get(conversationsRef); // Hämta data från Firebase\n        if (snapshot.exists()) {\n          const data = snapshot.val(); // Data från Firebase\n          console.log(\"Data från Firebase:\", data); // Logga datan för att se vad som hämtas\n          \n          // Om data finns, konvertera det till en lista med alla konversationer\n          const conversationsList = Object.keys(data).map(key => ({\n            id: key,\n            ...data[key], // Lägg till all information från konversationen\n          }));\n          setConversations(conversationsList); // Sätt konversationerna i state\n        } else {\n          console.log(\"Inga konversationer tillgängliga.\");\n        }\n      } catch (error) {\n        console.log(\"Fel vid hämtning av konversationer:\", error);\n      }\n    };\n\n    fetchConversations();\n  }, []); // Endast körs när komponenten laddas\n\n  // Funktion för att navigera tillbaka till huvudsidan\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till huvudsidan\n  };\n\n  return (\n    <div>\n      <h2>Historik</h2>\n      <ul>\n        {conversations.length > 0 ? (\n          conversations.map((conversation) => (\n            <li key={conversation.id}>\n              <p>{conversation.title}</p>\n              <p>{conversation.created_at}</p>\n              {/* Här kan du lägga till en länk eller knapp för att spela upp ljudfilen */}\n            </li>\n          ))\n        ) : (\n          <p>Inga konversationer hittades.</p>\n        )}\n      </ul>\n\n      {/* Knapp för att gå tillbaka till huvudsidan */}\n      <button onClick={handleGoBack}>Tillbaka till Hemsidan</button>\n    </div>\n  );\n};\n\nexport default HistoryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}