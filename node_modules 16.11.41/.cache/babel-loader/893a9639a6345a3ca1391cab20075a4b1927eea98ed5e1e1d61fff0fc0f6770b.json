{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const MAX_RECORDING_TIME = 5000;\n  let recordingTimeout = null;\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const options = {\n          mimeType: 'audio/webm'\n        };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid Ã¥tkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  useEffect(() => {\n    const drawWaveform = () => {\n      if (!canvasRef.current || !isRecording) return;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n      if (dataArray.every(value => value === 0)) return;\n      const sliceWidth = canvas.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#60a5fa';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n      requestAnimationFrame(drawWaveform);\n    };\n    if (isRecording) drawWaveform();\n  }, [isRecording]);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n    mediaRecorder.ondataavailable = event => {\n      const audioBlob = new Blob([event.data], {\n        type: 'audio/webm'\n      });\n      setAudioBlob(audioBlob);\n    };\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_RECORDING_TIME);\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n    }\n  };\n  const handleUpload = async blob => {\n    setLoading(true);\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-uploader-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"title\",\n        children: \"Spela in och bearbeta ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recording-controls\",\n        children: !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStartRecording,\n          disabled: loading,\n          className: \"btn start-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-microphone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this), \" Starta inspelning\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopRecording,\n          disabled: loading,\n          className: \"btn stop-btn\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), \" Stoppa inspelning\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: \"300\",\n        height: \"100\",\n        className: \"waveform-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: \"Bearbetar ljud...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"audio-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Bearbetat ljud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: responseAudio,\n          controls: true,\n          className: \"audio-player\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"p4qSp/gSpfTVfysUcLEEr4G/pO0=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadAudio","jsxDEV","_jsxDEV","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","audioRef","canvasRef","analyserRef","audioContextRef","microphoneRef","MAX_RECORDING_TIME","recordingTimeout","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaStreamSource","connect","error","console","drawWaveform","canvas","ctx","getContext","clearRect","width","height","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","every","value","sliceWidth","x","i","v","y","fillStyle","fillRect","requestAnimationFrame","handleStartRecording","start","ondataavailable","event","Blob","data","type","setTimeout","handleStopRecording","state","stop","clearTimeout","handleUpload","blob","audioBlobResponse","audioURL","URL","createObjectURL","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","src","controls","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const MAX_RECORDING_TIME = 5000;\n  let recordingTimeout = null;\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const options = { mimeType: 'audio/webm' };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid Ã¥tkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  useEffect(() => {\n    const drawWaveform = () => {\n      if (!canvasRef.current || !isRecording) return;\n\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      if (dataArray.every(value => value === 0)) return;\n\n      const sliceWidth = canvas.width / bufferLength;\n      let x = 0;\n\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#60a5fa';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n\n      requestAnimationFrame(drawWaveform);\n    };\n\n    if (isRecording) drawWaveform();\n  }, [isRecording]);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    mediaRecorder.start();\n    setIsRecording(true);\n\n    mediaRecorder.ondataavailable = (event) => {\n      const audioBlob = new Blob([event.data], { type: 'audio/webm' });\n      setAudioBlob(audioBlob);\n    };\n\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_RECORDING_TIME);\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    setLoading(true);\n\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n\n  return (\n    <div className=\"audio-uploader-container\">\n      <div className=\"audio-uploader-card\">\n        <h2 className=\"title\">Spela in och bearbeta ljud</h2>\n        <div className=\"recording-controls\">\n          {!isRecording ? (\n            <button onClick={handleStartRecording} disabled={loading} className=\"btn start-btn\">\n              <i className=\"fas fa-microphone\"></i> Starta inspelning\n            </button>\n          ) : (\n            <button onClick={handleStopRecording} disabled={loading} className=\"btn stop-btn\">\n              <i className=\"fas fa-stop\"></i> Stoppa inspelning\n            </button>\n          )}\n        </div>\n\n        <canvas ref={canvasRef} width=\"300\" height=\"100\" className=\"waveform-canvas\"></canvas>\n\n        {loading && <div className=\"loading-indicator\">Bearbetar ljud...</div>}\n\n        {responseAudio && (\n          <div className=\"audio-preview\">\n            <h3>Bearbetat ljud</h3>\n            <audio ref={audioRef} src={responseAudio} controls className=\"audio-player\"></audio>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}