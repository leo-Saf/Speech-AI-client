{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport AuthModal from './components/AuthModal'; // Modal för inloggning och registrering\nimport { signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebaseConfig';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentScreen, setCurrentScreen] = useState(null); // Hanterar vilken modal som visas\n  const [showAuthModal, setShowAuthModal] = useState(false); // Hanterar om modalen visas\n  const [loading, setLoading] = useState(true); // Lägg till loading state\n  const [user, setUser] = useState(null); // För att hålla koll på användarinformation\n\n  useEffect(() => {\n    // Kolla om användaren redan är inloggad\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) {\n        setIsAuthenticated(true);\n        setUser(user); // Sätt användarinformationen\n      } else {\n        setIsAuthenticated(false);\n        setUser(null); // Ta bort användarinformation om inte inloggad\n      }\n      setLoading(false); // När authstatusen har laddats, sätt loading till false\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleOpenAuthModal = mode => {\n    setCurrentScreen(mode); // Sätt modalen som login eller register\n    setShowAuthModal(true);\n  };\n  const handleCloseAuthModal = () => {\n    setShowAuthModal(false);\n  };\n  const handleLogout = () => {\n    auth.signOut(); // Logga ut användaren\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px'\n      },\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"V\\xE4lkommen, \", user.displayName || 'Användare']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logga ut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenAuthModal('login'),\n          children: \"Logga in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleOpenAuthModal('register'),\n          children: \"Registrera\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Laddar...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) // Visa laddning när autentisering är pågående\n    : /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), showAuthModal && /*#__PURE__*/_jsxDEV(AuthModal, {\n      mode: currentScreen,\n      onClose: handleCloseAuthModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"QyOhjfiUKEqvS/d7OX01Ahzrb/c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","Login","Signup","AuthModal","signInAnonymously","onAuthStateChanged","auth","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","currentScreen","setCurrentScreen","showAuthModal","setShowAuthModal","loading","setLoading","user","setUser","unsubscribe","handleOpenAuthModal","mode","handleCloseAuthModal","handleLogout","signOut","children","style","position","top","right","displayName","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Home from './components/Home';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport AuthModal from './components/AuthModal'; // Modal för inloggning och registrering\nimport { signInAnonymously, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from './firebaseConfig';\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [currentScreen, setCurrentScreen] = useState(null); // Hanterar vilken modal som visas\n  const [showAuthModal, setShowAuthModal] = useState(false); // Hanterar om modalen visas\n  const [loading, setLoading] = useState(true); // Lägg till loading state\n  const [user, setUser] = useState(null); // För att hålla koll på användarinformation\n\n  useEffect(() => {\n    // Kolla om användaren redan är inloggad\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setIsAuthenticated(true);\n        setUser(user); // Sätt användarinformationen\n      } else {\n        setIsAuthenticated(false);\n        setUser(null); // Ta bort användarinformation om inte inloggad\n      }\n      setLoading(false); // När authstatusen har laddats, sätt loading till false\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const handleOpenAuthModal = (mode) => {\n    setCurrentScreen(mode); // Sätt modalen som login eller register\n    setShowAuthModal(true);\n  };\n\n  const handleCloseAuthModal = () => {\n    setShowAuthModal(false);\n  };\n\n  const handleLogout = () => {\n    auth.signOut(); // Logga ut användaren\n  };\n\n  return (\n    <div>\n      {/* Knapp för att öppna inloggnings-/registreringsmodal */}\n      <div style={{ position: 'absolute', top: '10px', right: '10px' }}>\n        {isAuthenticated ? (\n          <>\n            <span>Välkommen, {user.displayName || 'Användare'}</span>\n            <button onClick={handleLogout}>Logga ut</button>\n          </>\n        ) : (\n          <>\n            <button onClick={() => handleOpenAuthModal('login')}>Logga in</button>\n            <button onClick={() => handleOpenAuthModal('register')}>Registrera</button>\n          </>\n        )}\n      </div>\n\n      {/* Huvudsida */}\n      {loading ? (\n        <div>Laddar...</div> // Visa laddning när autentisering är pågående\n      ) : (\n        <Home />\n      )}\n\n      {/* Modal för inloggning eller registrering */}\n      {showAuthModal && (\n        <AuthModal mode={currentScreen} onClose={handleCloseAuthModal} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}