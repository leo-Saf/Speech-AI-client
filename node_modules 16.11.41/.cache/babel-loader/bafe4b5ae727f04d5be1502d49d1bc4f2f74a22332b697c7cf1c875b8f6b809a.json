{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/LanguageSelector.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SoundWaves = ({\n  volume\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"sound-waves\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wave\",\n    style: {\n      height: `${volume}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wave\",\n    style: {\n      height: `${volume * 0.8}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wave\",\n    style: {\n      height: `${volume * 0.6}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wave\",\n    style: {\n      height: `${volume * 0.4}%`\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = SoundWaves;\nconst VoiceInput = () => {\n  _s();\n  const [isListening, setIsListening] = useState(false);\n  const [volume, setVolume] = useState(0);\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      console.log('Web Speech API stöds inte i denna webbläsare.');\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n    recognition.onresult = event => {\n      let volumeLevel = Math.random() * 100;\n      setVolume(volumeLevel);\n    };\n    recognition.start();\n    return () => recognition.stop();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"voice-input-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isListening ? 'Lyssnar...' : 'Klar för röstinmatning'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SoundWaves, {\n      volume: volume\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(VoiceInput, \"93jps8Zy8HJTQJDU9LxF9+rZdyM=\");\n_c2 = VoiceInput;\nexport default VoiceInput;\nvar _c, _c2;\n$RefreshReg$(_c, \"SoundWaves\");\n$RefreshReg$(_c2, \"VoiceInput\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SoundWaves","volume","className","children","style","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","VoiceInput","_s","isListening","setIsListening","setVolume","SpeechRecognition","window","webkitSpeechRecognition","console","log","recognition","continuous","interimResults","onstart","onend","onresult","event","volumeLevel","Math","random","start","stop","_c2","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/LanguageSelector.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../style.css';\n\nconst SoundWaves = ({ volume }) => (\n  <div className=\"sound-waves\">\n    <div className=\"wave\" style={{ height: `${volume}%` }}></div>\n    <div className=\"wave\" style={{ height: `${volume * 0.8}%` }}></div>\n    <div className=\"wave\" style={{ height: `${volume * 0.6}%` }}></div>\n    <div className=\"wave\" style={{ height: `${volume * 0.4}%` }}></div>\n  </div>\n);\n\nconst VoiceInput = () => {\n  const [isListening, setIsListening] = useState(false);\n  const [volume, setVolume] = useState(0);\n\n  useEffect(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n    if (!SpeechRecognition) {\n      console.log('Web Speech API stöds inte i denna webbläsare.');\n      return;\n    }\n\n    const recognition = new SpeechRecognition();\n    recognition.continuous = true;\n    recognition.interimResults = true;\n\n    recognition.onstart = () => setIsListening(true);\n    recognition.onend = () => setIsListening(false);\n\n    recognition.onresult = (event) => {\n      let volumeLevel = Math.random() * 100;\n      setVolume(volumeLevel);\n    };\n\n    recognition.start();\n    return () => recognition.stop();\n  }, []);\n\n  return (\n    <div className=\"voice-input-container\">\n      <h3>{isListening ? 'Lyssnar...' : 'Klar för röstinmatning'}</h3>\n      <SoundWaves volume={volume} />\n    </div>\n  );\n};\n\nexport default VoiceInput;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}