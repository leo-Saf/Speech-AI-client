{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js\",\n  _s = $RefreshSig$();\n// src/components/HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '.../supabaseClient'; // Importera din Supabase-klient\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const {\n        data,\n        error\n      } = await supabase.from('conversations') // Antag att du har en tabell för konversationer\n      .select('*').order('created_at', {\n        ascending: false\n      });\n      if (error) {\n        console.log('Error fetching conversations:', error);\n      } else {\n        setConversations(data);\n      }\n    };\n    fetchConversations();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: conversation.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: conversation.created_at\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"O5exSWX9CCDe/tq8iR4AHPY4uSY=\");\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","supabase","jsxDEV","_jsxDEV","HistoryPage","_s","conversations","setConversations","fetchConversations","data","error","from","select","order","ascending","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","conversation","title","created_at","id","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js"],"sourcesContent":["// src/components/HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { supabase } from '.../supabaseClient'; // Importera din Supabase-klient\n\nconst HistoryPage = () => {\n  const [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const { data, error } = await supabase\n        .from('conversations')  // Antag att du har en tabell för konversationer\n        .select('*')\n        .order('created_at', { ascending: false });\n\n      if (error) {\n        console.log('Error fetching conversations:', error);\n      } else {\n        setConversations(data);\n      }\n    };\n\n    fetchConversations();\n  }, []);\n\n  return (\n    <div>\n      <h2>Historik</h2>\n      <ul>\n        {conversations.map((conversation) => (\n          <li key={conversation.id}>\n            <p>{conversation.title}</p>\n            <p>{conversation.created_at}</p>\n            {/* Här kan du lägga till en länk eller knapp för att spela upp ljudfilen */}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default HistoryPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAMT,QAAQ,CACnCU,IAAI,CAAC,eAAe,CAAC,CAAE;MAAA,CACvBC,MAAM,CAAC,GAAG,CAAC,CACXC,KAAK,CAAC,YAAY,EAAE;QAAEC,SAAS,EAAE;MAAM,CAAC,CAAC;MAE5C,IAAIJ,KAAK,EAAE;QACTK,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEN,KAAK,CAAC;MACrD,CAAC,MAAM;QACLH,gBAAgB,CAACE,IAAI,CAAC;MACxB;IACF,CAAC;IAEDD,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBlB,OAAA;MAAAc,QAAA,EACGX,aAAa,CAACgB,GAAG,CAAEC,YAAY,iBAC9BpB,OAAA;QAAAc,QAAA,gBACEd,OAAA;UAAAc,QAAA,EAAIM,YAAY,CAACC;QAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BlB,OAAA;UAAAc,QAAA,EAAIM,YAAY,CAACE;QAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFzBE,YAAY,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIpB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCID,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}