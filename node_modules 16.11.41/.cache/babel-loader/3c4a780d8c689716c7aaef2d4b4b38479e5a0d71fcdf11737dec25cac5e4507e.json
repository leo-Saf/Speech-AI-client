{"ast":null,"code":"export const uploadAudio = async audioBlob => {\n  const formData = new FormData();\n  formData.append('audio', blob, 'audio.webm');\n  try {\n    const response = await fetch('DIN_UPPLADDNINGS_URL', {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error('Uppladdning misslyckades');\n    }\n    const data = await response.blob(); // Eller använd .json() om du förväntar dig JSON-svar\n    return data;\n  } catch (error) {\n    throw new Error(`Fel vid uppladdning: ${error.message}`);\n  }\n};","map":{"version":3,"names":["uploadAudio","audioBlob","formData","FormData","append","blob","response","fetch","method","body","ok","Error","data","error","message"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/client.js"],"sourcesContent":["export const uploadAudio = async (audioBlob) => {\n  const formData = new FormData();\n  formData.append('audio', blob, 'audio.webm');\n\n  try {\n    const response = await fetch('DIN_UPPLADDNINGS_URL', {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error('Uppladdning misslyckades');\n    }\n\n    const data = await response.blob(); // Eller använd .json() om du förväntar dig JSON-svar\n    return data;\n  } catch (error) {\n    throw new Error(`Fel vid uppladdning: ${error.message}`);\n  }\n};\n"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEC,IAAI,EAAE,YAAY,CAAC;EAE5C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAsB,EAAE;MACnDC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEP;IACR,CAAC,CAAC;IAEF,IAAI,CAACI,QAAQ,CAACI,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC7C;IAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC;IACpC,OAAOO,IAAI;EACb,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIF,KAAK,CAAC,wBAAwBE,KAAK,CAACC,OAAO,EAAE,CAAC;EAC1D;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}