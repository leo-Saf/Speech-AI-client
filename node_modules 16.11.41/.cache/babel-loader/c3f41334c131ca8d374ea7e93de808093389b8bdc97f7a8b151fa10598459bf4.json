{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null); // Ref till canvas för vågformsanimation\n  const MAX_RECORDING_TIME = 5000;\n  let recordingTimeout = null;\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const options = {\n          mimeType: 'audio/webm'\n        };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  useEffect(() => {\n    // Funktion för att rita vågformsanimation\n    const drawWaveform = () => {\n      const canvas = canvasRef.current;\n      if (!canvas || !isRecording) return;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Animerade ljudnivåer (exempel)\n      const amplitude = Math.sin(Date.now() / 100) * 50 + 50; // Enkel vågform\n\n      ctx.fillStyle = '#3b82f6';\n      ctx.fillRect(0, canvas.height / 2 - amplitude / 2, canvas.width, amplitude);\n      requestAnimationFrame(drawWaveform); // Uppdatera animationen\n    };\n    if (isRecording) {\n      drawWaveform(); // Starta animation när inspelning börjar\n    }\n  }, [isRecording]);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n    mediaRecorder.ondataavailable = event => {\n      const audioBlob = new Blob([event.data], {\n        type: 'audio/webm'\n      });\n      setAudioBlob(audioBlob);\n    };\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_RECORDING_TIME);\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n    }\n  };\n  const handleUpload = async blob => {\n    setLoading(true);\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spela in ett ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: loading,\n      children: \"Starta inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: loading,\n      children: \"Stoppa inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bearbetar ljud...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 100,\n      style: {\n        border: '1px solid #ccc',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: responseAudio,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"MJNcZvzBVPtzRpeMOfi9YQlOTvU=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadAudio","jsxDEV","_jsxDEV","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","audioRef","canvasRef","MAX_RECORDING_TIME","recordingTimeout","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","error","console","drawWaveform","canvas","current","ctx","getContext","clearRect","width","height","amplitude","Math","sin","Date","now","fillStyle","fillRect","requestAnimationFrame","handleStartRecording","start","ondataavailable","event","Blob","data","type","setTimeout","handleStopRecording","state","stop","clearTimeout","handleUpload","blob","audioBlobResponse","audioURL","URL","createObjectURL","play","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","border","marginTop","src","controls","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null); // Ref till canvas för vågformsanimation\n  const MAX_RECORDING_TIME = 5000;\n  let recordingTimeout = null;\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const options = { mimeType: 'audio/webm' };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  useEffect(() => {\n    // Funktion för att rita vågformsanimation\n    const drawWaveform = () => {\n      const canvas = canvasRef.current;\n      if (!canvas || !isRecording) return;\n\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Animerade ljudnivåer (exempel)\n      const amplitude = Math.sin(Date.now() / 100) * 50 + 50; // Enkel vågform\n\n      ctx.fillStyle = '#3b82f6';\n      ctx.fillRect(0, canvas.height / 2 - amplitude / 2, canvas.width, amplitude);\n\n      requestAnimationFrame(drawWaveform); // Uppdatera animationen\n    };\n\n    if (isRecording) {\n      drawWaveform(); // Starta animation när inspelning börjar\n    }\n  }, [isRecording]);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    mediaRecorder.start();\n    setIsRecording(true);\n\n    mediaRecorder.ondataavailable = (event) => {\n      const audioBlob = new Blob([event.data], { type: 'audio/webm' });\n      setAudioBlob(audioBlob);\n    };\n\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_RECORDING_TIME);\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    setLoading(true);\n\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h2>Spela in ett ljud</h2>\n      {!isRecording ? (\n        <button onClick={handleStartRecording} disabled={loading}>\n          Starta inspelning\n        </button>\n      ) : (\n        <button onClick={handleStopRecording} disabled={loading}>\n          Stoppa inspelning\n        </button>\n      )}\n\n      {loading && <p>Bearbetar ljud...</p>}\n\n      {/* Vågformsanimation */}\n      <canvas ref={canvasRef} width={300} height={100} style={{ border: '1px solid #ccc', marginTop: '10px' }}></canvas>\n\n      {responseAudio && (\n        <div>\n          <h3>Bearbetat ljud</h3>\n          <audio ref={audioRef} src={responseAudio} controls></audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}