{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const MAX_SILENCE_TIME = 5000;\n  const SILENCE_THRESHOLD = 30;\n  const silenceHistory = [];\n  let silenceTimeout = null;\n  let recordingTimeout = null;\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const options = {\n          mimeType: 'audio/webm'\n        };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  useEffect(() => {\n    const drawWaveform = () => {\n      if (!canvasRef.current || isPaused) return;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n      const avgLevel = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      silenceHistory.push(avgLevel);\n      if (silenceHistory.length > 10) silenceHistory.shift();\n      const isSilent = silenceHistory.every(level => level < SILENCE_THRESHOLD);\n      if (isSilent && silenceHistory.length === 10) {\n        if (!silenceTimeout) {\n          silenceTimeout = setTimeout(() => {\n            handleStopRecording(); // Stoppa inspelningen vid tystnad\n          }, MAX_SILENCE_TIME);\n        }\n      } else {\n        clearTimeout(silenceTimeout);\n        silenceTimeout = null;\n      }\n      const sliceWidth = canvas.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#3b82f6';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n      requestAnimationFrame(drawWaveform);\n    };\n    if (isRecording && !isPaused) {\n      drawWaveform();\n    }\n  }, [isRecording, isPaused]);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    if (isPaused) {\n      mediaRecorder.resume();\n      setIsPaused(false);\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n      silenceHistory.length = 0;\n    }\n    if (recordingTimeout) clearTimeout(recordingTimeout);\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, 5 * 60 * 1000);\n    mediaRecorder.ondataavailable = event => {\n      const audioBlob = new Blob([event.data], {\n        type: 'audio/webm'\n      });\n      console.log('Inspelad data:', event.data); // Lägg till logg för att kolla data\n      setAudioBlob(audioBlob);\n    };\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n      setIsPaused(false);\n      clearTimeout(silenceTimeout);\n\n      // Automatisk uppladdning efter inspelning avslutas\n      if (audioBlob) {\n        // Se till att ljudet bearbetas och laddas upp om tystnad detekteras\n        handleUpload(audioBlob);\n      } else {\n        // Om ingen blob finns, kan vi försöka skapa en ny från de data som är tillgängliga\n        // (t.ex. från den pågående inspelningen) eller visa ett felmeddelande\n        console.error(\"Ingen ljuddata att bearbeta.\");\n      }\n    }\n  };\n  const handlePauseRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.pause();\n      setIsPaused(true);\n    }\n  };\n  const handleUpload = async blob => {\n    setLoading(true);\n    try {\n      const response = await uploadAudio(blob); // Försök att ladda upp ljudfilen\n      console.log('Uppladdning lyckades:', response);\n      const audioURL = URL.createObjectURL(response);\n      setResponseAudio(audioURL); // Sätt ljudfilen som en URL att spela upp\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error); // Logga hela felobjektet\n      alert(`Fel vid uppladdning: ${error.message}`); // Visa användaren detaljer om felet\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Spela in ett ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: [!isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        disabled: loading,\n        className: \"btn start-btn\",\n        children: \"Starta inspelning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this) : isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        disabled: loading,\n        className: \"btn resume-btn\",\n        children: \"\\xC5teruppta inspelning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopRecording,\n          disabled: loading,\n          className: \"btn stop-btn\",\n          children: \"Stoppa inspelning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePauseRecording,\n          disabled: loading,\n          className: \"btn pause-btn\",\n          children: \"Pausa inspelning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-text\",\n        children: \"Bearbetar ljud...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: \"waveform-canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: responseAudio,\n        controls: true,\n        className: \"audio-player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"r0ZJOCeMmnzvpwjdghXiEVPxJXo=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadAudio","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","isPaused","setIsPaused","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","audioRef","canvasRef","analyserRef","audioContextRef","microphoneRef","MAX_SILENCE_TIME","SILENCE_THRESHOLD","silenceHistory","silenceTimeout","recordingTimeout","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaStreamSource","connect","error","console","drawWaveform","canvas","ctx","getContext","clearRect","width","height","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","avgLevel","reduce","sum","value","push","length","shift","isSilent","every","level","setTimeout","handleStopRecording","clearTimeout","sliceWidth","x","i","v","y","fillStyle","fillRect","requestAnimationFrame","handleStartRecording","resume","start","ondataavailable","event","Blob","data","type","log","state","stop","handleUpload","handlePauseRecording","pause","blob","response","audioURL","URL","createObjectURL","alert","message","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","src","controls","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  \n  const MAX_SILENCE_TIME = 5000;\n  const SILENCE_THRESHOLD = 30;\n  const silenceHistory = [];\n  let silenceTimeout = null;\n  let recordingTimeout = null;\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const options = { mimeType: 'audio/webm' };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  useEffect(() => {\n    const drawWaveform = () => {\n      if (!canvasRef.current || isPaused) return;\n\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      const avgLevel = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      silenceHistory.push(avgLevel);\n\n      if (silenceHistory.length > 10) silenceHistory.shift();\n\n      const isSilent = silenceHistory.every(level => level < SILENCE_THRESHOLD);\n\n      if (isSilent && silenceHistory.length === 10) {\n        if (!silenceTimeout) {\n          silenceTimeout = setTimeout(() => {\n            handleStopRecording();  // Stoppa inspelningen vid tystnad\n          }, MAX_SILENCE_TIME);\n        }\n      } else {\n        clearTimeout(silenceTimeout);\n        silenceTimeout = null;\n      }\n\n      const sliceWidth = canvas.width / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#3b82f6';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n\n      requestAnimationFrame(drawWaveform);\n    };\n\n    if (isRecording && !isPaused) {\n      drawWaveform();\n    }\n  }, [isRecording, isPaused]);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    if (isPaused) {\n      mediaRecorder.resume();\n      setIsPaused(false);\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n      silenceHistory.length = 0;\n    }\n\n    if (recordingTimeout) clearTimeout(recordingTimeout);\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, 5 * 60 * 1000);\n\n    mediaRecorder.ondataavailable = (event) => {\n      const audioBlob = new Blob([event.data], { type: 'audio/webm' });\n      console.log('Inspelad data:', event.data);  // Lägg till logg för att kolla data\n      setAudioBlob(audioBlob);\n    };\n    \n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n      setIsPaused(false);\n      clearTimeout(silenceTimeout);\n  \n      // Automatisk uppladdning efter inspelning avslutas\n      if (audioBlob) {\n        // Se till att ljudet bearbetas och laddas upp om tystnad detekteras\n        handleUpload(audioBlob);\n      } else {\n        // Om ingen blob finns, kan vi försöka skapa en ny från de data som är tillgängliga\n        // (t.ex. från den pågående inspelningen) eller visa ett felmeddelande\n        console.error(\"Ingen ljuddata att bearbeta.\");\n      }\n    }\n  };\n  \n\n  const handlePauseRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.pause();\n      setIsPaused(true);\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    setLoading(true);\n    try {\n      const response = await uploadAudio(blob);  // Försök att ladda upp ljudfilen\n      console.log('Uppladdning lyckades:', response);\n      const audioURL = URL.createObjectURL(response);\n      setResponseAudio(audioURL);  // Sätt ljudfilen som en URL att spela upp\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);  // Logga hela felobjektet\n      alert(`Fel vid uppladdning: ${error.message}`); // Visa användaren detaljer om felet\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  \n\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n\n  return (\n    <div className=\"audio-uploader\">\n      <h2 className=\"title\">Spela in ett ljud</h2>\n      <div className=\"recording-controls\">\n        {!isRecording ? (\n          <button onClick={handleStartRecording} disabled={loading} className=\"btn start-btn\">\n            Starta inspelning\n          </button>\n        ) : isPaused ? (\n          <button onClick={handleStartRecording} disabled={loading} className=\"btn resume-btn\">\n            Återuppta inspelning\n          </button>\n        ) : (\n          <>\n            <button onClick={handleStopRecording} disabled={loading} className=\"btn stop-btn\">\n              Stoppa inspelning\n            </button>\n            <button onClick={handlePauseRecording} disabled={loading} className=\"btn pause-btn\">\n              Pausa inspelning\n            </button>\n          </>\n        )}\n        {loading && <p className=\"loading-text\">Bearbetar ljud...</p>}\n      </div>\n  \n      <div className=\"canvas-container\">\n        <canvas ref={canvasRef} className=\"waveform-canvas\"></canvas>\n      </div>\n  \n      {responseAudio && (\n        <div className=\"audio-preview\">\n          <h3>Bearbetat ljud</h3>\n          <audio ref={audioRef} src={responseAudio} controls className=\"audio-player\"></audio>\n        </div>\n      )}\n    </div>\n  );\n  \n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}