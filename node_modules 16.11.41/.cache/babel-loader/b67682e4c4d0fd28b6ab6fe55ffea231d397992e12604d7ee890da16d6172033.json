{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const MAX_SILENCE_TIME = 5000; // Tid i ms som vi väntar på tystnad innan vi stoppar inspelningen\n  const SILENCE_THRESHOLD = 30; // Tröskel för ljudnivå, under vilket vi betraktar ljudet som tyst\n  const silenceHistory = []; // För att hålla koll på senaste ljudnivåerna\n  let silenceTimeout = null;\n  let recordingTimeout = null;\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const options = {\n          mimeType: 'audio/webm'\n        };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n\n        // Skapa en AudioContext och AnalyserNode för att läsa ljuddata\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  useEffect(() => {\n    // Funktion för att rita vågformsanimation\n    const drawWaveform = () => {\n      if (!canvasRef.current || isPaused) return;\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Beräkna ljudnivå (genomsnitt av alla data)\n      const avgLevel = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      silenceHistory.push(avgLevel);\n\n      // Behåll en historik av senaste ljudnivåerna\n      if (silenceHistory.length > 10) silenceHistory.shift();\n\n      // Kontrollera om ljudnivån har varit under tröskeln under en längre period\n      const isSilent = silenceHistory.every(level => level < SILENCE_THRESHOLD);\n      if (isSilent && silenceHistory.length === 10) {\n        // Om vi har haft tystnad under en längre period, starta en timeout för att stoppa inspelningen\n        if (!silenceTimeout) {\n          silenceTimeout = setTimeout(() => {\n            handleStopRecording();\n          }, MAX_SILENCE_TIME);\n        }\n      } else {\n        clearTimeout(silenceTimeout);\n        silenceTimeout = null;\n      }\n\n      // Rita vågformen på canvas\n      const sliceWidth = canvas.width * 1.0 / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#3b82f6';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n      requestAnimationFrame(drawWaveform); // Uppdatera animationen\n    };\n    if (isRecording && !isPaused) {\n      drawWaveform(); // Starta animation när inspelning börjar\n    }\n  }, [isRecording, isPaused]);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    if (isPaused) {\n      mediaRecorder.resume();\n      setIsPaused(false);\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n    }\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_SILENCE_TIME);\n    mediaRecorder.ondataavailable = event => {\n      const audioBlob = new Blob([event.data], {\n        type: 'audio/webm'\n      });\n      setAudioBlob(audioBlob);\n    };\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n      setIsPaused(false);\n      clearTimeout(silenceTimeout); // Stoppa tystnads-timer om inspelning stoppas\n    }\n  };\n  const handlePauseRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.pause();\n      setIsPaused(true);\n    }\n  };\n  const handleUpload = async blob => {\n    setLoading(true);\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Spela in ett ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recording-controls\",\n      children: [!isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        disabled: loading,\n        className: \"btn start-btn\",\n        children: \"Starta inspelning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this) : isPaused ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStartRecording,\n        disabled: loading,\n        className: \"btn resume-btn\",\n        children: \"\\xC5teruppta inspelning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStopRecording,\n          disabled: loading,\n          className: \"btn stop-btn\",\n          children: \"Stoppa inspelning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePauseRecording,\n          disabled: loading,\n          className: \"btn pause-btn\",\n          children: \"Pausa inspelning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-text\",\n        children: \"Bearbetar ljud...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 300,\n      height: 100,\n      className: \"waveform-canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"audio-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: responseAudio,\n        controls: true,\n        className: \"audio-player\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"r0ZJOCeMmnzvpwjdghXiEVPxJXo=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useEffect","useRef","uploadAudio","jsxDEV","_jsxDEV","Fragment","_Fragment","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","isPaused","setIsPaused","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","audioRef","canvasRef","analyserRef","audioContextRef","microphoneRef","MAX_SILENCE_TIME","SILENCE_THRESHOLD","silenceHistory","silenceTimeout","recordingTimeout","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","current","window","AudioContext","webkitAudioContext","createAnalyser","fftSize","createMediaStreamSource","connect","error","console","drawWaveform","canvas","ctx","getContext","clearRect","width","height","bufferLength","frequencyBinCount","dataArray","Uint8Array","getByteFrequencyData","avgLevel","reduce","sum","value","push","length","shift","isSilent","every","level","setTimeout","handleStopRecording","clearTimeout","sliceWidth","x","i","v","y","fillStyle","fillRect","requestAnimationFrame","handleStartRecording","resume","start","ondataavailable","event","Blob","data","type","state","stop","handlePauseRecording","pause","handleUpload","blob","audioBlobResponse","audioURL","URL","createObjectURL","play","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","src","controls","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { uploadAudio } from '../client';\nimport '../style.css';\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const canvasRef = useRef(null);\n  const analyserRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const microphoneRef = useRef(null);\n  const MAX_SILENCE_TIME = 5000; // Tid i ms som vi väntar på tystnad innan vi stoppar inspelningen\n  const SILENCE_THRESHOLD = 30; // Tröskel för ljudnivå, under vilket vi betraktar ljudet som tyst\n  const silenceHistory = []; // För att hålla koll på senaste ljudnivåerna\n  let silenceTimeout = null;\n  let recordingTimeout = null;\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const options = { mimeType: 'audio/webm' };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n\n        // Skapa en AudioContext och AnalyserNode för att läsa ljuddata\n        audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n        analyserRef.current = audioContextRef.current.createAnalyser();\n        analyserRef.current.fftSize = 256;\n        microphoneRef.current = audioContextRef.current.createMediaStreamSource(stream);\n        microphoneRef.current.connect(analyserRef.current);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n\n    setupRecorder();\n  }, []);\n\n  useEffect(() => {\n    // Funktion för att rita vågformsanimation\n    const drawWaveform = () => {\n      if (!canvasRef.current || isPaused) return;\n\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      const bufferLength = analyserRef.current.frequencyBinCount;\n      const dataArray = new Uint8Array(bufferLength);\n      analyserRef.current.getByteFrequencyData(dataArray);\n\n      // Beräkna ljudnivå (genomsnitt av alla data)\n      const avgLevel = dataArray.reduce((sum, value) => sum + value, 0) / bufferLength;\n      silenceHistory.push(avgLevel);\n\n      // Behåll en historik av senaste ljudnivåerna\n      if (silenceHistory.length > 10) silenceHistory.shift();\n\n      // Kontrollera om ljudnivån har varit under tröskeln under en längre period\n      const isSilent = silenceHistory.every(level => level < SILENCE_THRESHOLD);\n\n      if (isSilent && silenceHistory.length === 10) {\n        // Om vi har haft tystnad under en längre period, starta en timeout för att stoppa inspelningen\n        if (!silenceTimeout) {\n          silenceTimeout = setTimeout(() => {\n            handleStopRecording();\n          }, MAX_SILENCE_TIME);\n        }\n      } else {\n        clearTimeout(silenceTimeout);\n        silenceTimeout = null;\n      }\n\n      // Rita vågformen på canvas\n      const sliceWidth = canvas.width * 1.0 / bufferLength;\n      let x = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        const v = dataArray[i] / 255;\n        const y = v * canvas.height;\n        ctx.fillStyle = '#3b82f6';\n        ctx.fillRect(x, canvas.height - y, sliceWidth, y);\n        x += sliceWidth;\n      }\n\n      requestAnimationFrame(drawWaveform); // Uppdatera animationen\n    };\n\n    if (isRecording && !isPaused) {\n      drawWaveform(); // Starta animation när inspelning börjar\n    }\n  }, [isRecording, isPaused]);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n\n    if (isPaused) {\n      mediaRecorder.resume();\n      setIsPaused(false);\n    } else {\n      mediaRecorder.start();\n      setIsRecording(true);\n    }\n\n    recordingTimeout = setTimeout(() => {\n      handleStopRecording();\n    }, MAX_SILENCE_TIME);\n\n    mediaRecorder.ondataavailable = (event) => {\n      const audioBlob = new Blob([event.data], { type: 'audio/webm' });\n      setAudioBlob(audioBlob);\n    };\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.stop();\n      clearTimeout(recordingTimeout);\n      setIsRecording(false);\n      setIsPaused(false);\n      clearTimeout(silenceTimeout); // Stoppa tystnads-timer om inspelning stoppas\n    }\n  };\n\n  const handlePauseRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === 'recording') {\n      mediaRecorder.pause();\n      setIsPaused(true);\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    setLoading(true);\n    try {\n      const audioBlobResponse = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(audioBlobResponse);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (responseAudio && audioRef.current) {\n      audioRef.current.play();\n    }\n  }, [responseAudio]);\n\n  return (\n    <div className=\"audio-uploader\">\n      <h2 className=\"title\">Spela in ett ljud</h2>\n      <div className=\"recording-controls\">\n        {!isRecording ? (\n          <button onClick={handleStartRecording} disabled={loading} className=\"btn start-btn\">\n            Starta inspelning\n          </button>\n        ) : isPaused ? (\n          <button onClick={handleStartRecording} disabled={loading} className=\"btn resume-btn\">\n            Återuppta inspelning\n          </button>\n        ) : (\n          <>\n            <button onClick={handleStopRecording} disabled={loading} className=\"btn stop-btn\">\n              Stoppa inspelning\n            </button>\n            <button onClick={handlePauseRecording} disabled={loading} className=\"btn pause-btn\">\n              Pausa inspelning\n            </button>\n          </>\n        )}\n        {loading && <p className=\"loading-text\">Bearbetar ljud...</p>}\n      </div>\n\n      {/* Vågformsanimation */}\n      <canvas\n        ref={canvasRef}\n        width={300}\n        height={100}\n        className=\"waveform-canvas\"\n      ></canvas>\n\n      {responseAudio && (\n        <div className=\"audio-preview\">\n          <h3>Bearbetat ljud</h3>\n          <audio ref={audioRef} src={responseAudio} controls className=\"audio-player\"></audio>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}