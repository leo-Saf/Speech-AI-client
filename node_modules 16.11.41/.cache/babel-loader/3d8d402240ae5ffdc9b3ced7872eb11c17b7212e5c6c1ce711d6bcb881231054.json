{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { uploadAudio } from '../client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const MAX_RECORDING_TIME = 5000;\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true\n        });\n        const options = {\n          mimeType: 'audio/webm'\n        };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n    const audioChunks = [];\n    mediaRecorder.ondataavailable = event => audioChunks.push(event.data);\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunks, {\n        type: 'audio/webm'\n      });\n      setAudioBlob(audioBlob);\n      setIsRecording(false);\n      await handleUpload(audioBlob);\n    };\n    setTimeout(() => handleStopRecording(), MAX_RECORDING_TIME);\n  };\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === \"recording\") {\n      mediaRecorder.stop();\n    }\n  };\n  const handleUpload = async blob => {\n    if (!blob) return;\n    setLoading(true);\n    try {\n      const responseBlob = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(responseBlob);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Spela in ett ljud\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), !isRecording ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      disabled: loading,\n      children: \"Starta inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStopRecording,\n      disabled: loading,\n      children: \"Stoppa inspelning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Bearbetar ljud...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this), responseAudio && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bearbetat ljud\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        src: responseAudio,\n        controls: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"+QgrT6OIT9qO2e/CAcCg+cQ7lf8=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","useRef","useEffect","uploadAudio","jsxDEV","_jsxDEV","AudioUploader","_s","audioBlob","setAudioBlob","isRecording","setIsRecording","mediaRecorder","setMediaRecorder","responseAudio","setResponseAudio","loading","setLoading","audioRef","MAX_RECORDING_TIME","setupRecorder","stream","navigator","mediaDevices","getUserMedia","audio","options","mimeType","recorder","MediaRecorder","error","console","handleStartRecording","start","audioChunks","ondataavailable","event","push","data","onstop","Blob","type","handleUpload","setTimeout","handleStopRecording","state","stop","blob","responseBlob","audioURL","URL","createObjectURL","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","ref","src","controls","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { uploadAudio } from '../client';\n\nconst AudioUploader = () => {\n  const [audioBlob, setAudioBlob] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [mediaRecorder, setMediaRecorder] = useState(null);\n  const [responseAudio, setResponseAudio] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const audioRef = useRef(null);\n  const MAX_RECORDING_TIME = 5000;\n\n  useEffect(() => {\n    const setupRecorder = async () => {\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n        const options = { mimeType: 'audio/webm' };\n        const recorder = new MediaRecorder(stream, options);\n        setMediaRecorder(recorder);\n      } catch (error) {\n        console.error('Fel vid åtkomst till mikrofonen:', error);\n      }\n    };\n    setupRecorder();\n  }, []);\n\n  const handleStartRecording = () => {\n    if (!mediaRecorder) return;\n    mediaRecorder.start();\n    setIsRecording(true);\n\n    const audioChunks = [];\n    mediaRecorder.ondataavailable = (event) => audioChunks.push(event.data);\n\n    mediaRecorder.onstop = async () => {\n      const audioBlob = new Blob(audioChunks, { type: 'audio/webm' });\n      setAudioBlob(audioBlob);\n      setIsRecording(false);\n      await handleUpload(audioBlob);\n    };\n\n    setTimeout(() => handleStopRecording(), MAX_RECORDING_TIME);\n  };\n\n  const handleStopRecording = () => {\n    if (mediaRecorder && mediaRecorder.state === \"recording\") {\n      mediaRecorder.stop();\n    }\n  };\n\n  const handleUpload = async (blob) => {\n    if (!blob) return;\n    setLoading(true);\n\n    try {\n      const responseBlob = await uploadAudio(blob);\n      const audioURL = URL.createObjectURL(responseBlob);\n      setResponseAudio(audioURL);\n    } catch (error) {\n      console.error('Fel vid uppladdning:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <h2>Spela in ett ljud</h2>\n      {!isRecording ? (\n        <button onClick={handleStartRecording} disabled={loading}>Starta inspelning</button>\n      ) : (\n        <button onClick={handleStopRecording} disabled={loading}>Stoppa inspelning</button>\n      )}\n      {loading && <p>Bearbetar ljud...</p>}\n      {responseAudio && (\n        <div>\n          <h3>Bearbetat ljud</h3>\n          <audio ref={audioRef} src={responseAudio} controls />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMkB,QAAQ,GAAGjB,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAMkB,kBAAkB,GAAG,IAAI;EAE/BjB,SAAS,CAAC,MAAM;IACd,MAAMkB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;UAAEC,KAAK,EAAE;QAAK,CAAC,CAAC;QACzE,MAAMC,OAAO,GAAG;UAAEC,QAAQ,EAAE;QAAa,CAAC;QAC1C,MAAMC,QAAQ,GAAG,IAAIC,aAAa,CAACR,MAAM,EAAEK,OAAO,CAAC;QACnDb,gBAAgB,CAACe,QAAQ,CAAC;MAC5B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MAC1D;IACF,CAAC;IACDV,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMY,oBAAoB,GAAGA,CAAA,KAAM;IACjC,IAAI,CAACpB,aAAa,EAAE;IACpBA,aAAa,CAACqB,KAAK,CAAC,CAAC;IACrBtB,cAAc,CAAC,IAAI,CAAC;IAEpB,MAAMuB,WAAW,GAAG,EAAE;IACtBtB,aAAa,CAACuB,eAAe,GAAIC,KAAK,IAAKF,WAAW,CAACG,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC;IAEvE1B,aAAa,CAAC2B,MAAM,GAAG,YAAY;MACjC,MAAM/B,SAAS,GAAG,IAAIgC,IAAI,CAACN,WAAW,EAAE;QAAEO,IAAI,EAAE;MAAa,CAAC,CAAC;MAC/DhC,YAAY,CAACD,SAAS,CAAC;MACvBG,cAAc,CAAC,KAAK,CAAC;MACrB,MAAM+B,YAAY,CAAClC,SAAS,CAAC;IAC/B,CAAC;IAEDmC,UAAU,CAAC,MAAMC,mBAAmB,CAAC,CAAC,EAAEzB,kBAAkB,CAAC;EAC7D,CAAC;EAED,MAAMyB,mBAAmB,GAAGA,CAAA,KAAM;IAChC,IAAIhC,aAAa,IAAIA,aAAa,CAACiC,KAAK,KAAK,WAAW,EAAE;MACxDjC,aAAa,CAACkC,IAAI,CAAC,CAAC;IACtB;EACF,CAAC;EAED,MAAMJ,YAAY,GAAG,MAAOK,IAAI,IAAK;IACnC,IAAI,CAACA,IAAI,EAAE;IACX9B,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAM+B,YAAY,GAAG,MAAM7C,WAAW,CAAC4C,IAAI,CAAC;MAC5C,MAAME,QAAQ,GAAGC,GAAG,CAACC,eAAe,CAACH,YAAY,CAAC;MAClDjC,gBAAgB,CAACkC,QAAQ,CAAC;IAC5B,CAAC,CAAC,OAAOnB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRb,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEZ,OAAA;IAAK+C,KAAK,EAAE;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBAClCjD,OAAA;MAAAiD,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACzB,CAAChD,WAAW,gBACXL,OAAA;MAAQsD,OAAO,EAAE3B,oBAAqB;MAAC4B,QAAQ,EAAE5C,OAAQ;MAAAsC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAEpFrD,OAAA;MAAQsD,OAAO,EAAEf,mBAAoB;MAACgB,QAAQ,EAAE5C,OAAQ;MAAAsC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACnF,EACA1C,OAAO,iBAAIX,OAAA;MAAAiD,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EACnC5C,aAAa,iBACZT,OAAA;MAAAiD,QAAA,gBACEjD,OAAA;QAAAiD,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvBrD,OAAA;QAAOwD,GAAG,EAAE3C,QAAS;QAAC4C,GAAG,EAAEhD,aAAc;QAACiD,QAAQ;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnD,EAAA,CA/EID,aAAa;AAAA0D,EAAA,GAAb1D,aAAa;AAiFnB,eAAeA,aAAa;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}