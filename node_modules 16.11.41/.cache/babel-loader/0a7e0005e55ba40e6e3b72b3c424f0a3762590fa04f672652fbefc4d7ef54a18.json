{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioUploader = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [responseText, setResponseText] = useState(''); // State för backend-svaret\n\n  const handleAudioUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('audio', file);\n    try {\n      const response = await axios.post('DIN_BACKEND_URL', formData);\n      setResponseText(response.data.transcript); // Sätt svaret från backend\n      playResponse(response.data.transcript); // Spela upp svaret\n    } catch (error) {\n      console.error('Fel vid uppladdning av ljud:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funktion för att spela upp texten som tal\n  const playResponse = text => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"audio-uploader\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/*\",\n      onChange: handleAudioUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Bearbetar ljud...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 19\n    }, this), !loading && responseText && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"response-text\",\n      children: [\"Svaret: \", responseText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioUploader, \"MCLcEwqpAozYIzbyhkrJs7a3EgI=\");\n_c = AudioUploader;\nexport default AudioUploader;\nvar _c;\n$RefreshReg$(_c, \"AudioUploader\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AudioUploader","_s","loading","setLoading","responseText","setResponseText","handleAudioUpload","event","file","target","files","formData","FormData","append","response","post","data","transcript","playResponse","error","console","text","utterance","SpeechSynthesisUtterance","window","speechSynthesis","speak","className","children","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/AudioUploader.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AudioUploader = () => {\n  const [loading, setLoading] = useState(false);\n  const [responseText, setResponseText] = useState(''); // State för backend-svaret\n\n  const handleAudioUpload = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    setLoading(true);\n\n    const formData = new FormData();\n    formData.append('audio', file);\n\n    try {\n      const response = await axios.post('DIN_BACKEND_URL', formData);\n      setResponseText(response.data.transcript); // Sätt svaret från backend\n      playResponse(response.data.transcript); // Spela upp svaret\n    } catch (error) {\n      console.error('Fel vid uppladdning av ljud:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Funktion för att spela upp texten som tal\n  const playResponse = (text) => {\n    const utterance = new SpeechSynthesisUtterance(text);\n    window.speechSynthesis.speak(utterance);\n  };\n\n  return (\n    <div className=\"audio-uploader\">\n      <input type=\"file\" accept=\"audio/*\" onChange={handleAudioUpload} />\n      {loading && <p className=\"loading-text\">Bearbetar ljud...</p>}\n      {!loading && responseText && (\n        <p className=\"response-text\">Svaret: {responseText}</p>\n      )}\n    </div>\n  );\n};\n\nexport default AudioUploader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMU,iBAAiB,GAAG,MAAOC,KAAK,IAAK;IACzC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAI,CAACF,IAAI,EAAE;IAEXL,UAAU,CAAC,IAAI,CAAC;IAEhB,MAAMQ,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEL,IAAI,CAAC;IAE9B,IAAI;MACF,MAAMM,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAI,CAAC,iBAAiB,EAAEJ,QAAQ,CAAC;MAC9DN,eAAe,CAACS,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;MAC3CC,YAAY,CAACJ,QAAQ,CAACE,IAAI,CAACC,UAAU,CAAC,CAAC,CAAC;IAC1C,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRhB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMe,YAAY,GAAIG,IAAI,IAAK;IAC7B,MAAMC,SAAS,GAAG,IAAIC,wBAAwB,CAACF,IAAI,CAAC;IACpDG,MAAM,CAACC,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;EACzC,CAAC;EAED,oBACEvB,OAAA;IAAK4B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7B7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,MAAM,EAAC,SAAS;MAACC,QAAQ,EAAEzB;IAAkB;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAClEjC,OAAO,iBAAIH,OAAA;MAAG4B,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC5D,CAACjC,OAAO,IAAIE,YAAY,iBACvBL,OAAA;MAAG4B,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,UAAQ,EAACxB,YAAY;IAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CACvD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClC,EAAA,CAvCID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAyCnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}