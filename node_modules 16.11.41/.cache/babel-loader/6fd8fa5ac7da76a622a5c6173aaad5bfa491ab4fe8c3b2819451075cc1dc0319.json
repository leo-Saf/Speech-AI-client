{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database'; // Importera från firebase/database\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebaseConfig'; // Importera db från firebaseConfig\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const conversationsRef = ref(db, 'conversations/'); // Referens till 'conversations' i Firebase-databasen\n\n      try {\n        const snapshot = await get(conversationsRef); // Hämta data från Firebase\n        if (snapshot.exists()) {\n          const data = snapshot.val();\n          console.log(\"Data från Firebase:\", data);\n\n          // Om data finns, skapa en lista med konversationerna\n          const conversationsList = Object.keys(data).map(key => ({\n            id: key,\n            ...data[key] // Lägg till alla fält från konversationen\n          }));\n          setConversations(conversationsList); // Uppdatera state med konversationerna\n        } else {\n          console.log(\"Inga konversationer tillgängliga.\");\n        }\n      } catch (error) {\n        console.log(\"Fel vid hämtning av konversationer:\", error);\n      }\n    };\n    fetchConversations();\n  }, []); // Kör endast vid komponentladdning\n\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till hemsidan\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.length > 0 ? conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Prompt:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 14\n          }, this), \" \", conversation.Prompt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 14\n          }, this), \" \", conversation.Answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 14\n          }, this), \" \", conversation.Date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), conversation.PromptAudioURL && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => new Audio(conversation.PromptAudioURL).play(),\n          children: \"Spela upp Prompt ljud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), conversation.AnswerAudioURL && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => new Audio(conversation.AnswerAudioURL).play(),\n          children: \"Spela upp Answer ljud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Inga konversationer hittades.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleGoBack,\n      children: \"Tillbaka till Hemsidan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"kumPv95XaZzqxgpzG63BUVRiZ18=\", false, function () {\n  return [useNavigate];\n});\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","getDatabase","ref","get","useNavigate","db","jsxDEV","_jsxDEV","HistoryPage","_s","conversations","setConversations","navigate","fetchConversations","conversationsRef","snapshot","exists","data","val","console","log","conversationsList","Object","keys","map","key","id","error","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","conversation","Prompt","Answer","Date","PromptAudioURL","onClick","Audio","play","AnswerAudioURL","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database'; // Importera från firebase/database\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebaseConfig'; // Importera db från firebaseConfig\nimport '../style.css';\n\nconst HistoryPage = () => {\n  const [conversations, setConversations] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchConversations = async () => {\n      const conversationsRef = ref(db, 'conversations/'); // Referens till 'conversations' i Firebase-databasen\n\n      try {\n        const snapshot = await get(conversationsRef); // Hämta data från Firebase\n        if (snapshot.exists()) {\n          const data = snapshot.val();\n          console.log(\"Data från Firebase:\", data);\n          \n          // Om data finns, skapa en lista med konversationerna\n          const conversationsList = Object.keys(data).map(key => ({\n            id: key,\n            ...data[key], // Lägg till alla fält från konversationen\n          }));\n\n          setConversations(conversationsList); // Uppdatera state med konversationerna\n        } else {\n          console.log(\"Inga konversationer tillgängliga.\");\n        }\n      } catch (error) {\n        console.log(\"Fel vid hämtning av konversationer:\", error);\n      }\n    };\n\n    fetchConversations();\n  }, []); // Kör endast vid komponentladdning\n\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till hemsidan\n  };\n\n  return (\n    <div className=\"history-container\">\n  <h2>Historik</h2>\n  <ul>\n    {conversations.length > 0 ? (\n      conversations.map((conversation) => (\n        <li key={conversation.id}>\n          <p><strong>Prompt:</strong> {conversation.Prompt}</p>\n          <p><strong>Answer:</strong> {conversation.Answer}</p>\n          <p><strong>Date:</strong> {conversation.Date}</p>\n\n          {conversation.PromptAudioURL && (\n            <button onClick={() => new Audio(conversation.PromptAudioURL).play()}>\n              Spela upp Prompt ljud\n            </button>\n          )}\n          {conversation.AnswerAudioURL && (\n            <button onClick={() => new Audio(conversation.AnswerAudioURL).play()}>\n              Spela upp Answer ljud\n            </button>\n          )}\n        </li>\n      ))\n    ) : (\n      <p>Inga konversationer hittades.</p>\n    )}\n  </ul>\n  <button className=\"back-button\" onClick={handleGoBack}>Tillbaka till Hemsidan</button>\n</div>\n\n  );\n};\n\nexport default HistoryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}