{"ast":null,"code":"var _jsxFileName = \"/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js\",\n  _s = $RefreshSig$();\n// HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '.../firebaseConfig';\nimport '../style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [conversations, setConversations] = useState([]);\n  const [user, setUser] = useState(null); // För att hålla reda på den inloggade användaren\n  const navigate = useNavigate();\n\n  // Kontrollera om användaren är inloggad och hämta konversationer\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        setUser(user); // Sätt användaren\n        const conversationsRef = ref(db, 'conversations/'); // Hämta konversationer från databasen\n\n        try {\n          const snapshot = await get(conversationsRef); // Hämta data från Firebase\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            console.log('Data från Firebase:', data);\n\n            // Skapa en lista med konversationerna\n            const conversationsList = Object.keys(data).map(key => ({\n              id: key,\n              ...data[key] // Lägg till alla fält från konversationen\n            }));\n            setConversations(conversationsList); // Uppdatera state med konversationerna\n          } else {\n            console.log('Inga konversationer tillgängliga.');\n          }\n        } catch (error) {\n          console.log('Fel vid hämtning av konversationer:', error);\n        }\n      } else {\n        console.log('Ingen användare är inloggad');\n        navigate('/'); // Navigera till startsidan om användaren inte är inloggad\n      }\n    };\n    fetchData();\n  }, []); // Kör endast vid komponentladdning\n\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till hemsidan\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"history-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Historik\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"V\\xE4lkommen, \", user.displayName || 'Användare', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: conversations.length > 0 ? conversations.map(conversation => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Prompt:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this), \" \", conversation.Prompt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this), \" \", conversation.Answer]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 18\n          }, this), \" \", conversation.Date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), conversation.PromptAudioURL && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => new Audio(conversation.PromptAudioURL).play(),\n          children: \"Spela upp Prompt ljud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), conversation.AnswerAudioURL && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => new Audio(conversation.AnswerAudioURL).play(),\n          children: \"Spela upp Answer ljud\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)]\n      }, conversation.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Inga konversationer hittades.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back-button\",\n      onClick: handleGoBack,\n      children: \"Tillbaka till Hemsidan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"FW4RkYMalBq9SVRn5dPAD7lZCP0=\", false, function () {\n  return [useNavigate];\n});\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useEffect","useState","getDatabase","ref","get","useNavigate","auth","db","jsxDEV","_jsxDEV","HistoryPage","_s","conversations","setConversations","user","setUser","navigate","fetchData","currentUser","conversationsRef","snapshot","exists","data","val","console","log","conversationsList","Object","keys","map","key","id","error","handleGoBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","displayName","length","conversation","Prompt","Answer","Date","PromptAudioURL","onClick","Audio","play","AnswerAudioURL","_c","$RefreshReg$"],"sources":["/Users/hasansafiah/Desktop/projekt/git-test/Speech-AI-client/src/components/HistoryPage.js"],"sourcesContent":["// HistoryPage.js\nimport React, { useEffect, useState } from 'react';\nimport { getDatabase, ref, get } from 'firebase/database';\nimport { useNavigate } from 'react-router-dom';\nimport { auth, db } from '.../firebaseConfig';\nimport '../style.css';\n\nconst HistoryPage = () => {\n  const [conversations, setConversations] = useState([]);\n  const [user, setUser] = useState(null); // För att hålla reda på den inloggade användaren\n  const navigate = useNavigate();\n\n  // Kontrollera om användaren är inloggad och hämta konversationer\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = auth.currentUser;\n      if (user) {\n        setUser(user); // Sätt användaren\n        const conversationsRef = ref(db, 'conversations/'); // Hämta konversationer från databasen\n\n        try {\n          const snapshot = await get(conversationsRef); // Hämta data från Firebase\n          if (snapshot.exists()) {\n            const data = snapshot.val();\n            console.log('Data från Firebase:', data);\n\n            // Skapa en lista med konversationerna\n            const conversationsList = Object.keys(data).map(key => ({\n              id: key,\n              ...data[key], // Lägg till alla fält från konversationen\n            }));\n            setConversations(conversationsList); // Uppdatera state med konversationerna\n          } else {\n            console.log('Inga konversationer tillgängliga.');\n          }\n        } catch (error) {\n          console.log('Fel vid hämtning av konversationer:', error);\n        }\n      } else {\n        console.log('Ingen användare är inloggad');\n        navigate('/'); // Navigera till startsidan om användaren inte är inloggad\n      }\n    };\n\n    fetchData();\n  }, []); // Kör endast vid komponentladdning\n\n  const handleGoBack = () => {\n    navigate('/'); // Navigera till hemsidan\n  };\n\n  return (\n    <div className=\"history-container\">\n      <h2>Historik</h2>\n      {user && <p>Välkommen, {user.displayName || 'Användare'}!</p>} {/* Visa användarens namn */}\n      <ul>\n        {conversations.length > 0 ? (\n          conversations.map((conversation) => (\n            <li key={conversation.id}>\n              <p><strong>Prompt:</strong> {conversation.Prompt}</p>\n              <p><strong>Answer:</strong> {conversation.Answer}</p>\n              <p><strong>Date:</strong> {conversation.Date}</p>\n\n              {conversation.PromptAudioURL && (\n                <button onClick={() => new Audio(conversation.PromptAudioURL).play()}>\n                  Spela upp Prompt ljud\n                </button>\n              )}\n              {conversation.AnswerAudioURL && (\n                <button onClick={() => new Audio(conversation.AnswerAudioURL).play()}>\n                  Spela upp Answer ljud\n                </button>\n              )}\n            </li>\n          ))\n        ) : (\n          <p>Inga konversationer hittades.</p>\n        )}\n      </ul>\n      <button className=\"back-button\" onClick={handleGoBack}>Tillbaka till Hemsidan</button>\n    </div>\n  );\n};\n\nexport default HistoryPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}